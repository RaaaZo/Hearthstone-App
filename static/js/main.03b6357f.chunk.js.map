{"version":3,"sources":["Assets/images/loadingIndicator.svg","Assets/images/LandingHero.jpg","Assets/images/QualityOfCardsHero.jpg","Assets/images/typesOfCardsHero.jpg","Assets/images/CardReversesHero.jpg","Assets/images/HomeCards.jpg","Assets/images/HomeBacks.jpg","Assets/images/HomeHero.jpg","Assets/images/ExpansionsHero.jpg","theme/mainTheme.js","theme/GlobalStyle.js","components/atoms/Logo/Logo.js","components/molecules/HamburgerMenu/HamburgerMenu.js","ducks/actions/ModalActions.js","components/organisms/Navigation/HamburgerNavigation.js","components/molecules/HamburgerModal/HamburgerModal.js","components/organisms/Navbar/Navbar.js","components/atoms/Modal/Modal.js","components/organisms/Footer/Footer.js","templates/MainTemplate.js","components/atoms/ScrollToTop/ScrollToTop.js","components/atoms/Paragraph/Paragraph.js","components/organisms/LandingPage/PageDescription/PageDescription.js","components/organisms/LandingPage/CardImage/CardImage.js","components/organisms/LandingPage/CardDesc/CardDesc.js","components/atoms/Button/Button.js","components/atoms/Image/Image.js","components/organisms/LandingPage/CardBtn/CardBtn.js","components/atoms/Wrapper/Wrapper.js","pages/LandingPage.js","ducks/actions/fetchOneCardDataActions.js","ducks/constants/FetchConstants.js","components/organisms/TypesOfCards/Header.js","components/atoms/Header/Header.js","ducks/actions/fetchExpansionsSet.js","ducks/actions/cardDetailsActions.js","components/organisms/CardDetails/CardDetails.js","templates/CardTemplate.js","components/atoms/StyledParagraphForTypesAndQuality/StyledParagraphForTypesAndQuality.js","pages/TypesOfCardsPage.js","pages/QualityOfCards.js","components/atoms/ExpansionAtoms/StyledParagraph.js","pages/CardBacks.js","ducks/actions/fetchCardBacks.js","pages/HomePage.js","components/organisms/ExpansionsPage/HeroImg.js","components/atoms/ExpansionAtoms/Wrapper.js","components/atoms/ExpansionAtoms/InnerWrapper.js","components/atoms/ExpansionAtoms/StyledHeader.js","components/organisms/ExpansionsPage/SetsOfCardsLogic/BasicCardsLogic.js","components/organisms/ExpansionsPage/SetsOfCards/BasicCards.js","components/organisms/ExpansionsPage/Filters.js","pages/Expansions/BasicExpansion.js","pages/Expansions/GoblinsExpansion.js","pages/Expansions/NaxxramasExpansion.js","pages/Expansions/BlackrockMountainExpansion.js","pages/Expansions/GrandTournamentExpansion.js","pages/Expansions/LeagueOfExplorersExpansion.js","pages/Expansions/OldGodsExpansion.js","pages/Expansions/KharazanExpansion.js","pages/Expansions/GadzetanExpansion.js","pages/Expansions/UngoroExpansion.js","pages/Expansions/FrozenThroneExpansion.js","pages/Expansions/FilteredExpansionByClassPage.js","pages/Expansions/ClassicExpansion.js","routes/AppRouting.js","App.js","serviceWorker.js","ducks/reducers/modalReducer.js","ducks/reducers/fetchAllCardsReducer.js","ducks/reducers/fetchOneCardReducer.js","ducks/reducers/fetchExpansionsSet.js","ducks/reducers/fetchCardBacksReducer.js","ducks/reducers/index.js","ducks/store/index.js","index.js"],"names":["module","exports","theme","darkBrown","lightBrown","txt","nav","blue","yellow","darkModeBgc","darkModeTxt","purple","normalModeBackground","purpleBtnGradient","backgroundColor","backgroundImage","classColors","Druid","Hunter","Shaman","Paladin","Priest","Rogue","Mage","Warlock","Warrior","Neutral","fontWeight","light","regular","bold","fontSize","xs","s","m","l","xl","xxl","xxxl","GlobalStyle","createGlobalStyle","Logo","styled","h3","Wrapper","div","isOpen","css","HamburgerBox","button","HamburgerLine","span","HamburgerMenu","useSelector","state","modalReducer","dispatch","useDispatch","onClick","e","stopPropagation","type","StyledNavLinks","NavLink","Navigation","modal","to","activeClassName","InnerWrapper","HamburgerModal","StyledLogo","Navbar","as","Modal","StyledLink","a","Footer","href","target","MainTemplate","children","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Paragraph","p","normal","big","HeroWrapper","heroImg","StyledParagraph","LandingPageDesc","ImgWrapper","StyledHeader","CardImage","cardData","fetchOneCardReducer","OneCardData","isLoading","loading","src","loadingIndicator","alt","name","imgGold","StyledSpan","CardDesc","map","item","key","cardId","cost","attack","health","cardSet","text","rarity","faction","race","flavor","artist","Button","moreBtn","backBtn","Image","img","StyledSecondImg","StyledFirstImg","StyledBtn","CardBtn","Link","LandingPage","axios","method","url","headers","process","useQueryString","params","locale","then","response","data","payload","catch","error","fetchOneCardFailure","message","PageDescription","heroImgTypes","qualityOfCards","heroImgQuality","ReversesOfCards","heroImgReverses","decks","homeCards","backs","homeBacks","home","heroHome","TypesOfCardsHeader","Header","legendary","epic","rare","common","filterCardsByClass","className","fetchExpansionsSet","expansion","setOfCards","collectible","fetchExpansionsSetSuccess","fetchExpansionsSetFailure","getCardData","id","StyledImage","ImageWrapper","DescWrapper","CardDetails","cardBacks","detailsData","cardDetails","cardBacksDetails","fetchCardBacksReducer","backDetails","cardBackId","source","howToGet","CardTemplate","isOpenDetailsModal","StyledParagraphForTypesAndQuality","TypesOfCardsPage","cards","classicCardsData","filter","slice","QualityOfCards","OuterWrapper","ModifiedStyledParagraph","CardBacks","AllCardBacksData","fetchCardBacksFailure","description","StyledButton","HomePage","cardPlayerClass","CardsLogic","dataLogic","cardsLogic","card","playerClass","Cards","classes","Math","floor","random","length","StyledCardSetUl","ul","StyledClassUl","isOpenClass","StyledListItems","li","Filters","push","useHistory","isOpenCardSetFilter","isOpenClassFilter","handleCloseDispatchAndPushRoute","match","useRouteMatch","Expansions","HeroImg","BasicCards","GoblinsExpansion","NaxxramasExpansion","BlackrockMountainExpansion","GrandTournamentExpansion","LeagueOfExplorersExpansion","OldGodsExpansion","KharazanExpansion","GadzetanExpansion","UngoroExpansion","FrozenThroneExpansion","StyledGoBack","StyledWrapper","StyledHeaderByClass","cardClass","FilteredExpansionByClassPage","history","oneClassCards","cardsClass","class","goBack","ClassicExpansion","AppRouting","exact","path","component","App","basename","Boolean","location","hostname","initialState","action","AllCardsData","fetchAllCardsReducer","basicCardsData","naxxramasCardsData","goblinsCardsData","blackrockCardsData","tournamentCardsData","explorersCardsData","oldGodsCardsData","kharazanCardsData","gadzetonCardsData","ungoroCardsData","frozenThroneCardsData","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.03b6357f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingIndicator.006fd0dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/LandingHero.986040f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QualityOfCardsHero.db1ab9ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/typesOfCardsHero.4056e676.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CardReversesHero.6343d7fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HomeCards.2dcfb1eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HomeBacks.16e88446.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HomeHero.116bb1dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ExpansionsHero.135ad2ac.jpg\";","export const theme = {\r\n  darkBrown: '#895737',\r\n  lightBrown: 'hsl(51, 55%, 82%)',\r\n  txt: '#343a40',\r\n  nav: 'hsl(201, 100%, 14%)',\r\n  blue: 'hsl(180, 66%, 63%)',\r\n  yellow: 'hsl(52, 99%, 62%)',\r\n  darkModeBgc: '#303030',\r\n  darkModeTxt: '#FFF4F4F4',\r\n  purple: '#7209b7',\r\n  normalModeBackground: '#ead2ac',\r\n  purpleBtnGradient: {\r\n    backgroundColor: '#a4508b',\r\n    backgroundImage: 'linear-gradient(326deg, #a4508b 0%, #5f0a87 74%)',\r\n  },\r\n  classColors: {\r\n    Druid: '#774936',\r\n    Hunter: '#2d6a4f',\r\n    Shaman: '#023e8a',\r\n    Paladin: '#f48c06',\r\n    Priest: '#d8e2dc',\r\n    Rogue: '#343a40',\r\n    Mage: '#8fb8ed',\r\n    Warlock: '#3c096c',\r\n    Warrior: '#a51c30',\r\n    Neutral: '#e8eddf',\r\n  },\r\n  fontWeight: {\r\n    light: 200,\r\n    regular: 400,\r\n    bold: 700,\r\n  },\r\n  fontSize: {\r\n    xs: '1rem',\r\n    s: '1.2rem',\r\n    m: '1.3rem',\r\n    l: '1.8rem',\r\n    xl: '2.4rem',\r\n    xxl: '3rem',\r\n    xxxl: '4rem',\r\n  },\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n*, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n}\r\n\r\nhtml {\r\n    font-size: 62.5%;\r\n}\r\n\r\nbody{\r\n    font-size: 1.6rem;\r\n    background-color: #ead2ac;\r\n    color: #FFF4F4F4;\r\n    font-weight: 400;\r\n    font-family: 'Montserrat';\r\n    margin-bottom: 50px;\r\n\r\n    @media(min-width: 1240px){\r\n        margin-top: 175px;\r\n    }\r\n\r\n\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\n\r\nconst Logo = styled.h3`\r\n  color: ${({ theme }) => theme.yellow};\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n\r\n  @media (min-width: 425px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xxl};\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xxxl};\r\n  }\r\n`;\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleModal } from \"ducks/actions/ModalActions\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n  display: inline-block;\r\n  background: transparent;\r\n  border: 0;\r\n  margin: 0;\r\n  position: fixed;\r\n  bottom: 5%;\r\n  right: 3%;\r\n  border: 2px solid ${({ theme }) => theme.darkModeTxt};\r\n  z-index: 9999;\r\n  transition: border 0.3s 0.1s ease-in-out;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      border: 2px solid ${({ theme }) => theme.darkModeTxt};\r\n    `}\r\n\r\n  @media (min-width: 1240px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst HamburgerBox = styled.button`\r\n  width: 40px;\r\n  height: 24px;\r\n  padding: 15px;\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  outline: none;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst HamburgerLine = styled.span`\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: ${({ theme }) => theme.darkModeTxt};\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  transition: background-color 0.3s 0.1s ease-in-out;\r\n  overflow: visible;\r\n  z-index: 9999;\r\n\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 3px;\r\n    left: 0;\r\n    background-color: ${({ theme }) => theme.darkModeTxt};\r\n    position: absolute;\r\n    transition: transform 0.3s 0.1s ease-in-out;\r\n    z-index: 9999;\r\n  }\r\n\r\n  &::before {\r\n    top: -10px;\r\n  }\r\n\r\n  &::after {\r\n    top: 10px;\r\n  }\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      background-color: transparent;\r\n\r\n      &::before {\r\n        transform: translateY(10px) rotate(-45deg);\r\n      }\r\n\r\n      &::after {\r\n        transform: translateY(-10px) rotate(45deg);\r\n      }\r\n    `}\r\n`;\r\n\r\nconst HamburgerMenu = () => {\r\n  const isOpen = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleIsOpen = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(toggleModal());\r\n  };\r\n\r\n  return (\r\n    <Wrapper isOpen={isOpen} onClick={handleIsOpen}>\r\n      <HamburgerBox>\r\n        <HamburgerLine isOpen={isOpen} />\r\n      </HamburgerBox>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HamburgerMenu;\r\n","export const toggleModal = () => {\r\n  return {\r\n    type: 'TOGGLE_MODAL',\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: 'CLOSE_MODAL',\r\n  };\r\n};\r\n\r\nexport const toggleFilterModal = () => {\r\n  return {\r\n    type: 'TOGGLE_FILTER_MODAL',\r\n  };\r\n};\r\n\r\nexport const toggleClassModal = () => {\r\n  return {\r\n    type: 'TOGGLE_CLASS_MODAL',\r\n  };\r\n};\r\n\r\nexport const closeFilterModal = () => {\r\n  return {\r\n    type: 'CLOSE_FILTER_MODAL',\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n  display: none;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 60%;\r\n  z-index: 9999;\r\n\r\n  @media (min-width: 1240px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst StyledNavLinks = styled(NavLink)`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n  padding: 25px;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  z-index: 9999;\r\n  transition: color 0.3s linear;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.blue};\r\n  }\r\n\r\n  &.active {\r\n    color: ${({ theme }) => theme.blue};\r\n  }\r\n`;\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledNavLinks modal to='/expansions'>\r\n        Dodatki\r\n      </StyledNavLinks>\r\n      <StyledNavLinks activeClassName='active' to='/cardBacks'>\r\n        Rewersy kart\r\n      </StyledNavLinks>\r\n      <StyledNavLinks activeClassName='active' to='/typesOfCards'>\r\n        Typy kart\r\n      </StyledNavLinks>\r\n      <StyledNavLinks activeClassName='active' to='/qualityOfCards'>\r\n        Jakość kart\r\n      </StyledNavLinks>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from 'ducks/actions/ModalActions';\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 250px;\r\n  height: 100%;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  box-shadow: 0px 5px 30px 0px black;\r\n  transform: translateX(500px);\r\n  transition: transform 0.3s 0.1s ease-in-out;\r\n  z-index: 9;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      transform: translateX(0);\r\n    `}\r\n\r\n  @media(min-width: 950px) {\r\n    width: 350px;\r\n  }\r\n\r\n  @media (min-width: 1240px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 90%;\r\n  padding: 40px 0;\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.l};\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  @media (min-height: 1024px) {\r\n    padding: 120px 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLinks = styled(NavLink)`\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n  text-decoration: none;\r\n  transition: color 0.3s linear;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.blue};\r\n  }\r\n\r\n  &.active {\r\n    color: ${({ theme }) => theme.blue};\r\n  }\r\n\r\n  @media (min-width: 950px) {\r\n    font-size: ${({ theme }) => theme.fontSize.xl};\r\n  }\r\n`;\r\n\r\nconst HamburgerModal = () => {\r\n  const isOpen = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper isOpen={isOpen} onClick={(e) => e.stopPropagation()}>\r\n      <InnerWrapper>\r\n        <StyledNavLinks\r\n          activeClassName='active'\r\n          onClick={() => dispatch(closeModal())}\r\n          to='/expansions'\r\n        >\r\n          Dodatki\r\n        </StyledNavLinks>\r\n\r\n        <StyledNavLinks\r\n          activeClassName='active'\r\n          onClick={() => dispatch(closeModal())}\r\n          to='/cardBacks'\r\n        >\r\n          Rewersy kart\r\n        </StyledNavLinks>\r\n        <StyledNavLinks\r\n          activeClassName='active'\r\n          onClick={() => dispatch(closeModal())}\r\n          to='/typesOfCards'\r\n        >\r\n          Typy kart\r\n        </StyledNavLinks>\r\n        <StyledNavLinks\r\n          activeClassName='active'\r\n          onClick={() => dispatch(closeModal())}\r\n          to='/qualityOfCards'\r\n        >\r\n          Jakość kart\r\n        </StyledNavLinks>\r\n      </InnerWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default HamburgerModal;\r\n","import React from 'react';\r\nimport Logo from 'components/atoms/Logo/Logo';\r\nimport styled, { css } from 'styled-components';\r\nimport HamburgerMenu from 'components/molecules/HamburgerMenu/HamburgerMenu';\r\nimport Navigation from 'components/organisms/Navigation/HamburgerNavigation';\r\nimport { NavLink } from 'react-router-dom';\r\nimport HamburgerModal from 'components/molecules/HamburgerModal/HamburgerModal';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 15vh;\r\n  padding: 0 10px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  box-shadow: 0px 3px 20px 0px ${({ theme }) => theme.darkBrown};\r\n  overflow: hidden;\r\n  z-index: 99999999999;\r\n\r\n  @media (min-width: 1240px) {\r\n    justify-content: space-between;\r\n    padding: 0 30px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst StyledLogo = styled(Logo)`\r\n  font-size: ${({ theme }) => theme.fontSize.xxl};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  transition: transform 0.3s 0.1s ease-in-out;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${({ theme }) => theme.fontSize.xxxl};\r\n  }\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      @media (min-width: 700px) {\r\n        transform: translateX(-20%);\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const isOpen = useSelector((state) => state.modalReducer.isOpen);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <StyledLogo isOpen={isOpen} as={NavLink} to='/home'>\r\n          HearthStoneDB\r\n        </StyledLogo>\r\n        <HamburgerMenu />\r\n        <Navigation />\r\n        <HamburgerModal />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\n\r\nconst Modal = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 4%;\r\n  background-color: ${({ theme }) => theme.darkModeBgc};\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 10px;\r\n  margin-top: 5px;\r\n  margin-right: 5px;\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n\r\n  @media (min-width: 500px) {\r\n    font-size: 12px;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledLink\r\n        href='https://blizzard.gamespress.com/pl/Hearthstone'\r\n        target='_blank'\r\n      >\r\n        All Photos from\r\n      </StyledLink>\r\n      <StyledLink\r\n        href='https://github.com/RaaaZo?tab=repositories'\r\n        target='_blank'\r\n      >\r\n        Mateusz RaaZo\r\n      </StyledLink>\r\n      <StyledLink href='https://rapidapi.com/user/omgvamp' target='_blank'>\r\n        Cards DataBase\r\n      </StyledLink>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"theme/mainTheme\";\r\nimport GlobalStyle from \"theme/GlobalStyle\";\r\nimport Navbar from \"components/organisms/Navbar/Navbar\";\r\nimport Modal from \"components/atoms/Modal/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeModal } from \"ducks/actions/ModalActions\";\r\nimport Footer from \"components/organisms/Footer/Footer\";\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  const isOpen = useSelector((state) => state.modalReducer.isOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ThemeProvider theme={theme}>\r\n        {isOpen ? <Modal onClick={() => dispatch(closeModal())} /> : null}\r\n        <Navbar />\r\n        {children}\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.l};\r\n  font-weight: ${({ theme: { fontWeight } }) => fontWeight.regular};\r\n  text-align: center;\r\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\r\n    1px 1px 0 #000;\r\n\r\n  ${({ normal }) =>\r\n    normal &&\r\n    css`\r\n      font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n    `}\r\n\r\n  ${({ big }) =>\r\n    big &&\r\n    css`\r\n      font-size: ${({ theme: { fontSize } }) => fontSize.xxl};\r\n    `}\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paragraph from \"components/atoms/Paragraph/Paragraph\";\r\nimport heroImg from \"Assets/images/LandingHero.jpg\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 0;\r\n  max-width: 1280px;\r\n`;\r\n\r\nconst HeroWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 30px;\r\n  background-image: url(${heroImg});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-top: 1px solid ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 632px) {\r\n    height: 500px;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    height: 600px;\r\n  }\r\n  @media (min-width: 1360px) {\r\n    height: 700px;\r\n  }\r\n  @media (min-width: 1600px) {\r\n    height: 830px;\r\n  }\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  max-width: 1280px;\r\n  margin-top: 30px;\r\n  padding: 40px 10%;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 40px 15%;\r\n  }\r\n`;\r\n\r\nconst LandingPageDesc = () => {\r\n  return (\r\n    <Wrapper>\r\n      <HeroWrapper />\r\n      <StyledParagraph>\r\n        W bazie danych są karty od wersji klasycznej gry Hearthstone, aż do\r\n        najnowszego dodatku. Każda karta posiada pełen opis jak i smaczki takie\r\n        jak artysta, który stworzył daną kartę jak i teksty, które wypowiada\r\n        wybrana karta podczas zagrania. Poniżej znajduje się przykładowa karta\r\n        jaką jest wszystkim znana Ysera z dokładnym opisem znajdującym się\r\n        poniżej karty.\r\n      </StyledParagraph>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LandingPageDesc;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport loadingIndicator from \"Assets/images/loadingIndicator.svg\";\r\n\r\nconst ImgWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  padding: 40px 0;\r\n  margin: 30px 20px 0 20px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst StyledHeader = styled.h3`\r\n  margin: 20px 0;\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n`;\r\n\r\nconst CardImage = () => {\r\n  const cardData = useSelector(\r\n    (state) => state.fetchOneCardReducer.OneCardData\r\n  );\r\n  const isLoading = useSelector((state) => state.fetchOneCardReducer.loading);\r\n\r\n  return (\r\n    <ImgWrapper>\r\n      {isLoading ? (\r\n        <img src={loadingIndicator} alt='' />\r\n      ) : (\r\n        <>\r\n          <StyledHeader>{cardData[1].name}</StyledHeader>\r\n          <img\r\n            src={cardData[1].imgGold}\r\n            alt='CARD IMG TURN OFF ADDBLOCK TO SEE'\r\n          />\r\n        </>\r\n      )}\r\n    </ImgWrapper>\r\n  );\r\n};\r\n\r\nexport default CardImage;\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport loadingIndicator from 'Assets/images/loadingIndicator.svg';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 0;\r\n  padding: 40px 0;\r\n  border-radius: 15px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n`;\r\n\r\nconst StyledHeader = styled.h3`\r\n  margin: 10px 17%;\r\n  text-align: center;\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  text-align: center;\r\n  margin: 10px 17%;\r\n  color: ${({ theme }) => theme.yellow};\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  margin-left: 10px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.blue};\r\n`;\r\n\r\nconst CardDesc = () => {\r\n  const cardData = useSelector(\r\n    (state) => state.fetchOneCardReducer.OneCardData[1]\r\n  );\r\n  const isLoading = useSelector((state) => state.fetchOneCardReducer.loading);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledHeader>Opis karty :</StyledHeader>\r\n      {isLoading ? (\r\n        <img src={loadingIndicator} alt='' />\r\n      ) : (\r\n        [cardData].map((item) => {\r\n          return (\r\n            <Fragment key={item.cardId}>\r\n              <StyledParagraph>\r\n                Nazwa : <StyledSpan>{item.name}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Koszt many : <StyledSpan>{item.cost}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Atak : <StyledSpan>{item.attack}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Życie : <StyledSpan>{item.health}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Dodatek : <StyledSpan>{item.cardSet}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Moc specjalna : <StyledSpan>{item.text}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Rzadkość karty : <StyledSpan>{item.rarity}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Frakcja : <StyledSpan>{item.faction}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Rasa : <StyledSpan>{item.race}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Opis : <StyledSpan>{item.flavor}</StyledSpan>\r\n              </StyledParagraph>\r\n              <StyledParagraph>\r\n                Autor : <StyledSpan>{item.artist}</StyledSpan>\r\n              </StyledParagraph>\r\n            </Fragment>\r\n          );\r\n        })\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CardDesc;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  font-size: ${({ theme: { fontSize } }) => fontSize.l};\r\n  padding: 15px;\r\n  text-align: center;\r\n  font-weight: ${({ theme: { fontWeight } }) => fontWeight.bold};\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n  background-color: ${({ theme: { purpleBtnGradient } }) =>\r\n    purpleBtnGradient.backgroundColor};\r\n  background-image: ${({ theme: { purpleBtnGradient } }) =>\r\n    purpleBtnGradient.backgroundImage};\r\n  border: none;\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 425px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n    padding: 20px 30px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n    padding: 20px 50px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xxl};\r\n    padding: 25px 80px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xxl};\r\n    padding: 20px 120px;\r\n  }\r\n\r\n  ${({ moreBtn }) =>\r\n    moreBtn &&\r\n    css`\r\n      border: 3px solid ${({ theme }) => theme.darkBrown};\r\n      background-color: ${({ theme }) => theme.normalModeBackground};\r\n      color: ${({ theme }) => theme.darkBrown};\r\n      background-image: none;\r\n      padding: 20px 30px;\r\n\r\n      @media (min-width: 768px) {\r\n        padding: 20px 60px;\r\n      }\r\n    `}\r\n\r\n  ${({ backBtn }) =>\r\n    backBtn &&\r\n    css`\r\n      border: 2px solid #5d737e;\r\n      background-color: ${({ theme }) => theme.normalModeBackground};\r\n      color: #5d737e;\r\n      font-weight: ${({ theme: { fontWeight } }) => fontWeight.light};\r\n      background-image: none;\r\n      padding: 15px 20px;\r\n    `}\r\n\r\n    @media (min-width: 425px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.l};\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n    padding: 20px 30px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n    padding: 20px 40px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xxl};\r\n    padding: 20px 50px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst Image = styled.img`\r\n  max-width: 100%;\r\n  object-fit: contain;\r\n  object-position: center;\r\n`;\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"components/atoms/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"components/atoms/Image/Image\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 30px 10px;\r\n  max-width: 1280px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  margin: 30px 0;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst StyledSecondImg = styled(Image)`\r\n  display: none;\r\n\r\n  @media (min-width: 900px) {\r\n    display: block;\r\n  }\r\n`;\r\nconst StyledFirstImg = styled(Image)`\r\n  max-width: 60%;\r\n`;\r\n\r\nconst StyledBtn = styled(Button)`\r\n  text-decoration: none;\r\n  z-index: 9999999;\r\n`;\r\n\r\nconst CardBtn = () => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledFirstImg\r\n        src='http://wow.zamimg.com/images/hearthstone/cards/enus/animated/OG_133_premium.gif'\r\n        alt=''\r\n      />\r\n      <StyledBtn as={Link} to='/home'>\r\n        Przejdź do strony głównej\r\n      </StyledBtn>\r\n      <StyledSecondImg\r\n        src='https://wow.zamimg.com/images/hearthstone/backs/animated/Card_Back_Default.gif'\r\n        alt=''\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CardBtn;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 20px;\r\n\r\n  @media (min-width: 1320px) {\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from 'react';\r\nimport PageDescription from 'components/organisms/LandingPage/PageDescription/PageDescription';\r\nimport CardImage from 'components/organisms/LandingPage/CardImage/CardImage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchOneCard } from 'ducks/actions/fetchOneCardDataActions';\r\nimport CardDesc from 'components/organisms/LandingPage/CardDesc/CardDesc';\r\nimport CardBtn from 'components/organisms/LandingPage/CardBtn/CardBtn';\r\nimport Wrapper from 'components/atoms/Wrapper/Wrapper';\r\n\r\nconst LandingPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOneCard());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PageDescription />\r\n      <CardImage />\r\n      <CardDesc />\r\n      <CardBtn />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import axios from 'axios';\r\nimport {\r\n  FETCH_ONE_CARD_REQUEST,\r\n  FETCH_ONE_CARD_SUCCESS,\r\n  FETCH_ONE_CARD_FAILURE,\r\n} from 'ducks/constants/FetchConstants';\r\n\r\nexport const fetchOneCardRequest = () => {\r\n  return {\r\n    type: FETCH_ONE_CARD_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchOneCardSuccess = (data) => {\r\n  return {\r\n    type: FETCH_ONE_CARD_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchOneCardFailure = (error) => {\r\n  return {\r\n    type: FETCH_ONE_CARD_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchOneCard = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOneCardRequest());\r\n    axios({\r\n      method: 'GET',\r\n      url: 'https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/Ysera',\r\n      headers: {\r\n        'content-type': 'application/octet-stream',\r\n        'x-rapidapi-host': 'omgvamp-hearthstone-v1.p.rapidapi.com',\r\n        'x-rapidapi-key': process.env.REACT_APP_API_KEY,\r\n        useQueryString: true,\r\n      },\r\n      params: {\r\n        locale: 'plPL',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // response.data is the OneCard\r\n        const cardData = response.data;\r\n        dispatch(fetchOneCardSuccess(cardData));\r\n      })\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchOneCardFailure(error.message));\r\n      });\r\n  };\r\n};\r\n","export const FETCH_ALL_CARDS_REQUEST = 'FETCH_ALL_CARDS_REQUEST';\r\nexport const FETCH_ALL_CARDS_SUCCESS = 'FETCH_ALL_CARDS_SUCCESS';\r\nexport const FETCH_ALL_CARDS_FAILURE = 'FETCH_ALL_CARDS_FAILURE';\r\n\r\nexport const FETCH_ONE_CARD_REQUEST = 'FETCH_ONE_CARD_REQUEST';\r\nexport const FETCH_ONE_CARD_SUCCESS = 'FETCH_ONE_CARD_SUCCESS';\r\nexport const FETCH_ONE_CARD_FAILURE = 'FETCH_ONE_CARD_FAILURE';\r\n\r\nexport const FETCH_BASIC_SET_REQUEST = 'FETCH_BASIC_CARDS_REQUEST';\r\nexport const FETCH_BASIC_SET_SUCCESS = 'FETCH_BASIC_CARDS_SUCCESS';\r\nexport const FETCH_BASIC_SET_FAILURE = 'FETCH_BASIC_CARDS_FAILURE';\r\nexport const FILTER_CARDS_BY_CLASS = 'FILTER_CARDS_BY_CLASS';\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport heroImgQuality from 'Assets/images/QualityOfCardsHero.jpg';\r\nimport heroImgTypes from 'Assets/images/typesOfCardsHero.jpg';\r\nimport heroImgReverses from 'Assets/images/CardReversesHero.jpg';\r\nimport homeCards from 'Assets/images/HomeCards.jpg';\r\nimport homeBacks from 'Assets/images/HomeBacks.jpg';\r\nimport heroHome from 'Assets/images/HomeHero.jpg';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 20px;\r\n`;\r\n\r\nconst HeroWrapper = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 30px;\r\n  background-image: url(${heroImgTypes});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-top: 1px solid ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n\r\n  ${({ qualityOfCards }) =>\r\n    qualityOfCards &&\r\n    css`\r\n      background-image: url(${heroImgQuality});\r\n    `}\r\n\r\n  ${({ ReversesOfCards }) =>\r\n    ReversesOfCards &&\r\n    css`\r\n      background-image: url(${heroImgReverses});\r\n    `}\r\n\r\n  ${({ decks }) =>\r\n    decks &&\r\n    css`\r\n      background-image: url(${homeCards});\r\n    `}\r\n\r\n  ${({ backs }) =>\r\n    backs &&\r\n    css`\r\n      background-image: url(${homeBacks});\r\n    `}\r\n\r\n  ${({ home }) =>\r\n    home &&\r\n    css`\r\n      background-image: url(${heroHome});\r\n    `}\r\n\r\n  @media (min-width: 632px) {\r\n    height: 500px;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    height: 600px;\r\n  }\r\n  @media (min-width: 1360px) {\r\n    height: 700px;\r\n  }\r\n  @media (min-width: 1600px) {\r\n    height: 830px;\r\n  }\r\n`;\r\n\r\nconst TypesOfCardsHeader = ({\r\n  qualityOfCards,\r\n  ReversesOfCards,\r\n  decks,\r\n  backs,\r\n  home,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <HeroWrapper\r\n        qualityOfCards={qualityOfCards}\r\n        ReversesOfCards={ReversesOfCards}\r\n        decks={decks}\r\n        backs={backs}\r\n        home={home}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TypesOfCardsHeader;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Header = styled.h3`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  padding: 30px;\r\n  margin: 30px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  text-align: center;\r\n  border-radius: 15px;\r\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\r\n    1px 1px 0 #000;\r\n\r\n  ${({ legendary }) =>\r\n    legendary &&\r\n    css`\r\n      background-color: #fca311;\r\n    `}\r\n  ${({ epic }) =>\r\n    epic &&\r\n    css`\r\n      background-color: #7b2cbf;\r\n    `}\r\n  ${({ rare }) =>\r\n    rare &&\r\n    css`\r\n      background-color: #5390d9;\r\n    `}\r\n  ${({ common }) =>\r\n    common &&\r\n    css`\r\n      background-color: #ced4da;\r\n    `}\r\n`;\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nimport {\r\n  FETCH_BASIC_SET_REQUEST,\r\n  FETCH_BASIC_SET_SUCCESS,\r\n  FETCH_BASIC_SET_FAILURE,\r\n  FILTER_CARDS_BY_CLASS,\r\n} from \"ducks/constants/FetchConstants\";\r\n\r\nexport const filterCardsByClass = (className) => {\r\n  return {\r\n    type: FILTER_CARDS_BY_CLASS,\r\n    payload: {\r\n      className,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchExpansionsSetRequest = () => {\r\n  return {\r\n    type: FETCH_BASIC_SET_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchExpansionsSetSuccess = (data, setOfCards) => {\r\n  return {\r\n    type: FETCH_BASIC_SET_SUCCESS,\r\n    payload: {\r\n      data,\r\n      setOfCards,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchExpansionsSetFailure = (error, setOfCards) => {\r\n  return {\r\n    type: FETCH_BASIC_SET_FAILURE,\r\n    payload: {\r\n      error,\r\n      setOfCards,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchExpansionsSet = (expansion, setOfCards) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchExpansionsSetRequest());\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://omgvamp-hearthstone-v1.p.rapidapi.com/cards/sets/${expansion}`,\r\n      headers: {\r\n        \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        useQueryString: true,\r\n      },\r\n      params: {\r\n        locale: \"plPL\",\r\n        collectible: \"1\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // response.data is the OneCard\r\n        const cardData = response.data;\r\n        dispatch(fetchExpansionsSetSuccess(cardData, setOfCards));\r\n      })\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchExpansionsSetFailure(error.message, setOfCards));\r\n      });\r\n  };\r\n};\r\n","export const getCardData = (id) => {\r\n  return {\r\n    type: 'GET_CARD_DATA',\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getBackCardData = (id) => {\r\n  return {\r\n    type: 'GET_BACK_CARD_DATA',\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const toggleCardDetailsModal = () => {\r\n  return {\r\n    type: 'TOGGLE_CARD_DETAILS_MODAL',\r\n  };\r\n};\r\n\r\nexport const closeCardDetailsModal = () => {\r\n  return {\r\n    type: 'CLOSE_CARD_DETAILS_MODAL',\r\n  };\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeCardDetailsModal } from 'ducks/actions/cardDetailsActions';\r\n\r\nconst Modal = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: hsla(0, 0%, 0%, 0.5);\r\n  z-index: 99999999999;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-flow: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  display: none;\r\n  width: 100%;\r\n\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DescWrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 30px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  text-align: center;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n  margin: 20px;\r\n  color: ${({ theme }) => theme.yellow};\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin: 10px;\r\n  color: ${({ theme }) => theme.blue};\r\n`;\r\n\r\nconst StyledBtn = styled.button`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  padding: 6px 10px;\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n  background-color: ${({ theme }) => theme.darkModeBgc};\r\n  border-radius: 50%;\r\n  border: none;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n    padding: 12px 16px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    padding: 16px 20px;\r\n  }\r\n`;\r\n\r\nconst CardDetails = ({ cardBacks }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const detailsData = useSelector(\r\n    (state) => state.fetchExpansionsSet.cardDetails\r\n  );\r\n\r\n  const cardBacksDetails = useSelector(\r\n    (state) => state.fetchCardBacksReducer.backDetails\r\n  );\r\n\r\n  return (\r\n    <Modal onClick={() => dispatch(closeCardDetailsModal())}>\r\n      <Wrapper onClick={(e) => e.stopPropagation()}>\r\n        <StyledBtn onClick={() => dispatch(closeCardDetailsModal())}>\r\n          x\r\n        </StyledBtn>\r\n        {cardBacks\r\n          ? cardBacksDetails.map((item) => (\r\n              <Fragment key={item.cardBackId}>\r\n                <ImageWrapper>\r\n                  <StyledImage src={item.img} alt='tutaj jestem' />\r\n                </ImageWrapper>\r\n                <DescWrapper>\r\n                  <Header>Źródło :</Header>\r\n                  <Paragraph>{item.source}</Paragraph>\r\n                  <Header>Jak zdobyć :</Header>\r\n                  <Paragraph>{item.howToGet}</Paragraph>\r\n                </DescWrapper>\r\n              </Fragment>\r\n            ))\r\n          : detailsData.map((item) => (\r\n              <Fragment key={item.cardId}>\r\n                <ImageWrapper>\r\n                  <StyledImage\r\n                    src={`https://art.hearthstonejson.com/v1/render/latest/plPL/512x/${item.cardId}.png`}\r\n                    alt='tutaj jestem'\r\n                  />\r\n                </ImageWrapper>\r\n                <DescWrapper>\r\n                  <Header>Opis karty :</Header>\r\n                  <Paragraph>{item.flavor}</Paragraph>\r\n                  <Header>Artysta :</Header>\r\n                  <Paragraph>{item.artist}</Paragraph>\r\n                </DescWrapper>\r\n              </Fragment>\r\n            ))}\r\n      </Wrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardDetails from 'components/organisms/CardDetails/CardDetails';\r\nimport Wrapper from 'components/atoms/Wrapper/Wrapper';\r\n\r\nconst CardTemplate = ({ children, cardBacks }) => {\r\n  const isOpen = useSelector((state) => state.modalReducer.isOpenDetailsModal);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isOpen && <CardDetails cardBacks={cardBacks} />}\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CardTemplate;\r\n","import styled from \"styled-components\";\r\nimport Paragraph from \"../Paragraph/Paragraph\";\r\n\r\nconst StyledParagraphForTypesAndQuality = styled(Paragraph)`\r\n  text-align: center;\r\n  max-width: 1280px;\r\n  margin: 30px auto;\r\n  padding: 40px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 600px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.l};\r\n  }\r\n  @media (min-width: 900px) {\r\n    font-size: ${({ theme: { fontSize } }) => fontSize.xl};\r\n  }\r\n`;\r\n\r\nexport default StyledParagraphForTypesAndQuality;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport TypesOfCardsHeader from \"components/organisms/TypesOfCards/Header\";\r\nimport Header from \"components/atoms/Header/Header\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchExpansionsSet } from \"ducks/actions/fetchExpansionsSet\";\r\nimport CardTemplate from \"templates/CardTemplate\";\r\nimport StyledParagraph from \"components/atoms/StyledParagraphForTypesAndQuality/StyledParagraphForTypesAndQuality\";\r\n\r\nconst TypesOfCardsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const cards = useSelector(\r\n    (state) => state.fetchExpansionsSet.classicCardsData\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet(\"Classic\", \"classic\"));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <TypesOfCardsHeader />\r\n      <Header>Stronnik</Header>\r\n      {cards\r\n        .filter((item) => item.type === \"Minion\" && item.rarity === \"Legendary\")\r\n        .slice(4, 5)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraph>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraph>\r\n      <Header>Czar</Header>\r\n      {cards\r\n        .filter((item) => item.type === \"Spell\" && item.rarity === \"Epic\")\r\n        .slice(1, 2)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraph>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraph>\r\n      <Header>Broń</Header>\r\n      {cards\r\n        .filter((item) => item.type === \"Weapon\" && item.rarity === \"Epic\")\r\n        .slice(1, 2)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraph>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraph>\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default TypesOfCardsPage;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport TypesOfCardsHeader from 'components/organisms/TypesOfCards/Header';\r\nimport Header from 'components/atoms/Header/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport StyledParagraphForTypesAndQuality from 'components/atoms/StyledParagraphForTypesAndQuality/StyledParagraphForTypesAndQuality';\r\n\r\nconst QualityOfCards = () => {\r\n  const dispatch = useDispatch();\r\n  const cards = useSelector(\r\n    (state) => state.fetchExpansionsSet.classicCardsData\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Classic', 'classic'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <TypesOfCardsHeader qualityOfCards />\r\n      <Header legendary>Legendarna</Header>\r\n      {cards\r\n        .filter((item) => item.type === 'Minion' && item.rarity === 'Legendary')\r\n        .slice(4, 5)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraphForTypesAndQuality>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraphForTypesAndQuality>\r\n      <Header epic>Epicka</Header>\r\n      {cards\r\n        .filter((item) => item.type === 'Minion' && item.rarity === 'Epic')\r\n        .slice(1, 2)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraphForTypesAndQuality>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraphForTypesAndQuality>\r\n      <Header rare>Rzadka</Header>\r\n      {cards\r\n        .filter((item) => item.type === 'Minion' && item.rarity === 'Rare')\r\n        .slice(1, 2)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraphForTypesAndQuality>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraphForTypesAndQuality>\r\n      <Header common>Zwykła</Header>\r\n      {cards\r\n        .filter((item) => item.type === 'Minion' && item.rarity === 'Common')\r\n        .slice(1, 2)\r\n        .map((item) => (\r\n          <Fragment key={item.cardId}>\r\n            <img src={item.img} alt='tutaj jestem' />\r\n          </Fragment>\r\n        ))}\r\n      <StyledParagraphForTypesAndQuality>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque, dicta\r\n        architecto pariatur nihil maiores sint a soluta iure iusto illum\r\n        expedita eveniet qui dolores sunt exercitationem. Animi quisquam vitae\r\n        sit!\r\n      </StyledParagraphForTypesAndQuality>\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default QualityOfCards;\r\n","import styled from 'styled-components';\r\nimport Paragraph from '../Paragraph/Paragraph';\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 10px auto 0 auto;\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  &:nth-child(odd) {\r\n    color: ${({ theme }) => theme.yellow};\r\n  }\r\n  &:nth-child(even) {\r\n    color: ${({ theme }) => theme.blue};\r\n  }\r\n`;\r\n\r\nexport default StyledParagraph;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { fetchCardBacks } from 'ducks/actions/fetchCardBacks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport StyledParagraph from 'components/atoms/ExpansionAtoms/StyledParagraph';\r\nimport TypesOfCardsHeader from 'components/organisms/TypesOfCards/Header';\r\n\r\nimport loadingIndicator from 'Assets/images/loadingIndicator.svg';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\nimport {\r\n  getBackCardData,\r\n  toggleCardDetailsModal,\r\n} from 'ducks/actions/cardDetailsActions';\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n  margin: 20px 0;\r\n  padding: 12px 0;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 750px) {\r\n    width: 45%;\r\n    height: 700px;\r\n  }\r\n  @media (min-width: 1040px) {\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst OuterWrapper = styled.div`\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 700px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\nconst ModifiedStyledParagraph = styled(StyledParagraph)`\r\n  padding: 0 40px;\r\n`;\r\n\r\nconst CardBacks = () => {\r\n  const dispatch = useDispatch();\r\n  const cardBacks = useSelector(\r\n    (state) => state.fetchCardBacksReducer.AllCardBacksData\r\n  );\r\n  const isLoading = useSelector((state) => state.fetchCardBacksReducer.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCardBacks());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate cardBacks>\r\n      <TypesOfCardsHeader ReversesOfCards />\r\n      <Header>REWERSY KART :</Header>\r\n      <OuterWrapper>\r\n        {isLoading ? (\r\n          <img src={loadingIndicator} alt='Loading' />\r\n        ) : (\r\n          cardBacks.slice(0, 50).map((item) => (\r\n            <InnerWrapper\r\n              onClick={() => {\r\n                dispatch(toggleCardDetailsModal());\r\n                dispatch(getBackCardData(item.cardBackId));\r\n              }}\r\n              key={item.cardBackId}\r\n            >\r\n              <ModifiedStyledParagraph>{item.name}</ModifiedStyledParagraph>\r\n              <ModifiedStyledParagraph>\r\n                {item.description}\r\n              </ModifiedStyledParagraph>\r\n              <img src={item.img} alt='Card Back' />\r\n            </InnerWrapper>\r\n          ))\r\n        )}\r\n      </OuterWrapper>\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default CardBacks;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchCardBacksRequest = () => {\r\n  return {\r\n    type: \"FETCH_CARD_BACKS_REQUEST\",\r\n  };\r\n};\r\n\r\nexport const fetchCardBacksSuccess = (data) => {\r\n  return {\r\n    type: \"FETCH_CARD_BACKS_SUCCESS\",\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchCardBacksFailure = (error) => {\r\n  return {\r\n    type: \"FETCH_CARD_BACKS_FAILURE\",\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchCardBacks = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchCardBacksRequest());\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://omgvamp-hearthstone-v1.p.rapidapi.com/cardbacks`,\r\n      headers: {\r\n        \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"omgvamp-hearthstone-v1.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\r\n        useQueryString: true,\r\n      },\r\n      params: {\r\n        locale: \"plPL\",\r\n        collectible: \"1\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // response.data is the OneCard\r\n        const cardData = response.data;\r\n        dispatch(fetchCardBacksSuccess(cardData));\r\n      })\r\n      .catch((error) => {\r\n        // error.message is the error message\r\n        dispatch(fetchCardBacksFailure(error.message));\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport TypesOfCardsHeader from 'components/organisms/TypesOfCards/Header';\r\nimport Header from 'components/atoms/Header/Header';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'components/atoms/Button/Button';\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  padding: 15px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-space-between;\r\n  align-items: center;\r\n  padding: 30px;\r\n  margin: 30px;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  color: ${({ theme }) => theme.darkModeTxt};\r\n  text-decoration: none;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledHeader = styled(Header)`\r\n  margin: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 15px;\r\n  padding: 20px 50px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <CardTemplate>\r\n      <TypesOfCardsHeader home />\r\n      <Header>O stronie</Header>\r\n      <StyledParagraph>\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\r\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n        mollit anim id est laborum.\"\r\n      </StyledParagraph>\r\n      <TypesOfCardsHeader decks />\r\n      <InnerWrapper as={Link} to='/expansions'>\r\n        <StyledHeader>Wszystkie karty</StyledHeader>\r\n        <StyledParagraph>\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n          culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </StyledParagraph>\r\n        <StyledButton>Zobacz</StyledButton>\r\n      </InnerWrapper>\r\n      <TypesOfCardsHeader backs />\r\n      <InnerWrapper as={Link} to='/cardBacks'>\r\n        <StyledHeader>Wszystkie rewersy kart</StyledHeader>\r\n        <StyledParagraph>\r\n          \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n          culpa qui officia deserunt mollit anim id est laborum.\"\r\n        </StyledParagraph>\r\n        <StyledButton>Zobacz</StyledButton>\r\n      </InnerWrapper>\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport heroImg from 'Assets/images/ExpansionsHero.jpg';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 30px 20px;\r\n`;\r\n\r\nconst HeroWrapper = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 30px;\r\n  background-image: url(${heroImg});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  border-top: 1px solid ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 632px) {\r\n    height: 500px;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    height: 600px;\r\n  }\r\n  @media (min-width: 1360px) {\r\n    height: 700px;\r\n  }\r\n  @media (min-width: 1600px) {\r\n    height: 830px;\r\n  }\r\n`;\r\n\r\nconst LandingPageDesc = () => {\r\n  return (\r\n    <Wrapper>\r\n      <HeroWrapper />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LandingPageDesc;\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 1280px;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 700px) {\r\n    justify-content: space-around;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.darkBrown};\r\n  border-radius: 15px;\r\n  margin: 20px auto;\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 1024px) {\r\n    transform: scale(0.98);\r\n    transition: transform 0.15s linear;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport default InnerWrapper;\r\n","import styled from 'styled-components';\r\nimport Header from '../Header/Header';\r\n\r\nconst StyledHeader = styled(Header)`\r\n  background-color: ${({ theme: { classColors }, cardPlayerClass }) =>\r\n    classColors[cardPlayerClass]};\r\n`;\r\n\r\nexport default StyledHeader;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Wrapper from 'components/atoms/ExpansionAtoms/Wrapper';\r\nimport InnerWrapper from 'components/atoms/ExpansionAtoms/InnerWrapper';\r\nimport StyledParagraph from 'components/atoms/ExpansionAtoms/StyledParagraph';\r\nimport StyledHeader from 'components/atoms/ExpansionAtoms/StyledHeader';\r\nimport {\r\n  getCardData,\r\n  toggleCardDetailsModal,\r\n} from 'ducks/actions/cardDetailsActions';\r\n\r\nconst CardsLogic = ({ cardPlayerClass }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const dataLogic = useSelector((state) => state.fetchExpansionsSet.cardsLogic);\r\n  const data = useSelector(\r\n    (state) => state.fetchExpansionsSet[`${dataLogic}CardsData`]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader cardPlayerClass={cardPlayerClass}>\r\n        {cardPlayerClass}\r\n      </StyledHeader>\r\n\r\n      {dataLogic === 'basic' ? (\r\n        <Wrapper>\r\n          {data\r\n            .filter((card) => card.playerClass === cardPlayerClass)\r\n            .slice(1)\r\n            .map((item) => (\r\n              <InnerWrapper\r\n                onClick={() => {\r\n                  dispatch(getCardData(item.cardId));\r\n                  dispatch(toggleCardDetailsModal());\r\n                }}\r\n                key={item.cardId}\r\n              >\r\n                <StyledParagraph>{item.name}</StyledParagraph>\r\n                <StyledParagraph>{item.type}</StyledParagraph>\r\n                <img\r\n                  src={`https://art.hearthstonejson.com/v1/render/latest/plPL/256x/${item.cardId}.png`}\r\n                  alt='tutaj jestem'\r\n                />\r\n              </InnerWrapper>\r\n            ))}\r\n        </Wrapper>\r\n      ) : (\r\n        <Wrapper>\r\n          {data\r\n            .filter((card) => card.playerClass === cardPlayerClass)\r\n            .map((item) => (\r\n              <InnerWrapper\r\n                onClick={() => {\r\n                  dispatch(getCardData(item.cardId));\r\n                  dispatch(toggleCardDetailsModal());\r\n                }}\r\n                key={item.cardId}\r\n              >\r\n                <StyledParagraph>{item.name}</StyledParagraph>\r\n                <StyledParagraph>{item.type}</StyledParagraph>\r\n                <img\r\n                  src={`https://art.hearthstonejson.com/v1/render/latest/plPL/256x/${item.cardId}.png`}\r\n                  alt='tutaj jestem'\r\n                />\r\n              </InnerWrapper>\r\n            ))}\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardsLogic;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardsLogic from '../SetsOfCardsLogic/BasicCardsLogic';\r\n\r\nimport loadingIndicator from 'Assets/images/loadingIndicator.svg';\r\n\r\nconst Cards = () => {\r\n  const isLoading = useSelector((state) => state.fetchExpansionsSet.loading);\r\n\r\n  const classes = [\r\n    'Druid',\r\n    'Hunter',\r\n    'Mage',\r\n    'Paladin',\r\n    'Priest',\r\n    'Rogue',\r\n    'Shaman',\r\n    'Warlock',\r\n    'Warrior',\r\n    'Neutral',\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <img src={loadingIndicator} alt='spinner' />\r\n      ) : (\r\n        <>\r\n          <CardsLogic\r\n            cardPlayerClass={\r\n              classes[Math.floor(Math.random() * classes.length)]\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  toggleFilterModal,\r\n  toggleClassModal,\r\n  closeFilterModal,\r\n} from 'ducks/actions/ModalActions';\r\nimport { filterCardsByClass } from 'ducks/actions/fetchExpansionsSet';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 1280px;\r\n  padding: 30px;\r\n  background-color: #054a29;\r\n  border-radius: 15px;\r\n\r\n  @media (min-width: 560px) {\r\n    flex-flow: row;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledCardSetUl = styled.ul`\r\n  display: none;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    css`\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin: 10px 0;\r\n    `}\r\n`;\r\nconst StyledClassUl = styled.ul`\r\n  display: none;\r\n\r\n  ${({ isOpenClass }) =>\r\n    isOpenClass &&\r\n    css`\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin: 10px 0;\r\n    `}\r\n`;\r\n\r\nconst StyledListItems = styled.li`\r\n  width: 100%;\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: #a4508b;\r\n  background-image: linear-gradient(326deg, #a4508b 0%, #5f0a87 74%);\r\n  border-radius: 15px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\r\n    1px 1px 0 #000;\r\n`;\r\n\r\nconst StyledHeader = styled.h3`\r\n  padding: 20px 40px;\r\n  margin-top: 30px;\r\n  border-radius: 15px;\r\n  text-align: center;\r\n  background-color: #ff0054;\r\n  background-image: linear-gradient(326deg, #ffcad4 0%, #ff0054 74%);\r\n  cursor: pointer;\r\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\r\n    1px 1px 0 #000;\r\n\r\n  @media (min-width: 560px) {\r\n    margin-top: 0;\r\n  }\r\n\r\n  ${({ filter }) =>\r\n    filter &&\r\n    css`\r\n      background-image: none;\r\n      background-color: transparent;\r\n      margin-top: 0;\r\n      cursor: default;\r\n    `}\r\n\r\n  @media(min-width: 768px) {\r\n    padding: 20px 50px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 20px 60px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    padding: 20px 70px;\r\n  }\r\n`;\r\n\r\nconst Filters = () => {\r\n  const dispatch = useDispatch();\r\n  const { push } = useHistory();\r\n\r\n  const isOpenCardSetFilter = useSelector(\r\n    (state) => state.modalReducer.isOpenCardSetFilter\r\n  );\r\n  const isOpenClassFilter = useSelector(\r\n    (state) => state.modalReducer.isOpenClassFilter\r\n  );\r\n\r\n  const handleCloseDispatchAndPushRoute = (url) => {\r\n    dispatch(closeFilterModal());\r\n    push(`/${url}`);\r\n  };\r\n\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledHeader filter>Filtry :</StyledHeader>\r\n      <div>\r\n        <StyledHeader onClick={() => dispatch(toggleClassModal())}>\r\n          Klasy\r\n        </StyledHeader>\r\n        <StyledClassUl isOpenClass={isOpenClassFilter}>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Druid'));\r\n              push(`${match.url}/druid`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Druid\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Hunter'));\r\n              push(`${match.url}/hunter`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Hunter\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Mage'));\r\n              push(`${match.url}/mage`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Mage\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Paladin'));\r\n              push(`${match.url}/paladin`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Paladin\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Priest'));\r\n              push(`${match.url}/priest`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Priest\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Rogue'));\r\n              push(`${match.url}/rogue`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Rogue\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Shaman'));\r\n              push(`${match.url}/shaman`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Shaman\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Warlock'));\r\n              push(`${match.url}/warlock`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Warlock\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Warrior'));\r\n              push(`${match.url}/warrior`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Warrior\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => {\r\n              dispatch(filterCardsByClass('Neutral'));\r\n              push(`${match.url}/neutral`);\r\n              dispatch(closeFilterModal());\r\n            }}\r\n          >\r\n            Neutralne\r\n          </StyledListItems>\r\n        </StyledClassUl>\r\n      </div>\r\n\r\n      <div>\r\n        <StyledHeader onClick={() => dispatch(toggleFilterModal())}>\r\n          Dodatki\r\n        </StyledHeader>\r\n        <StyledCardSetUl isOpen={isOpenCardSetFilter}>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('expansions')}\r\n          >\r\n            Podstawowe\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('classic')}\r\n          >\r\n            Klasyczne\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('naxxramas')}\r\n          >\r\n            Naxxramas\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('goblins_vs_gnomes_expansion')\r\n            }\r\n          >\r\n            Gobliny vs Gnomy\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('blackrock_mountain')\r\n            }\r\n          >\r\n            Czarna Góra\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('grand_tournament')}\r\n          >\r\n            Wielki Turniej\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('league_of_explorers')\r\n            }\r\n          >\r\n            Liga Odkrywców\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('old_gods')}\r\n          >\r\n            Przedwieczni Bogowie\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('one_night_in_kharazan')\r\n            }\r\n          >\r\n            Pewnej nocy w Karazhanie\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('mean_streets_of_gadzetan')\r\n            }\r\n          >\r\n            Ciemne zaułki Gadżetonu\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() => handleCloseDispatchAndPushRoute('journey_to_ungoro')}\r\n          >\r\n            Podróż do wnętrza Un'Goro\r\n          </StyledListItems>\r\n          <StyledListItems\r\n            onClick={() =>\r\n              handleCloseDispatchAndPushRoute('knights_of_the_frozen_throne')\r\n            }\r\n          >\r\n            Rycerze Mroźnego Tronu\r\n          </StyledListItems>\r\n        </StyledCardSetUl>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst Expansions = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Basic', 'basic'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>DARMOWE KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default Expansions;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst GoblinsExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Goblins vs Gnomes', 'goblins'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>GOBLINY VS GNOMY KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default GoblinsExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst NaxxramasExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Naxxramas', 'naxxramas'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>KLĄTWA NAXXRAMAS KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default NaxxramasExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst BlackrockMountainExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Blackrock Mountain', 'blackrock'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>CZARNA GÓRA KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default BlackrockMountainExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst GrandTournamentExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('The Grand Tournament', 'tournament'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>WIELKI TURNIEJ KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default GrandTournamentExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst LeagueOfExplorersExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('The League of Explorers', 'explorers'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>LIGA ODKRYWCÓW KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default LeagueOfExplorersExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst OldGodsExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Whispers of the Old Gods', 'oldGods'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>PRZEDWIECZNI BOGOWIE KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default OldGodsExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\n\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst KharazanExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('One Night in Karazhan', 'kharazan'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>PEWNEJ NOCY W KHARAZANIE KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default KharazanExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst GadzetanExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Mean Streets of Gadgetzan', 'gadzetan'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>CIEMNE ZAUŁKI GADŻETONU KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default GadzetanExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst UngoroExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet(`Journey to Un'Goro`, 'ungoro'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>PODRÓŻ DO WNĘTRZA UN'GORO KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default UngoroExpansion;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst FrozenThroneExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchExpansionsSet('Knights of the Frozen Throne', 'frozenThrone')\r\n    );\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>RYCERZE MROŹNEGO TRONU KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default FrozenThroneExpansion;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport loadingIndicator from 'Assets/images/loadingIndicator.svg';\r\nimport StyledHeader from 'components/atoms/ExpansionAtoms/StyledHeader';\r\nimport StyledParagraph from 'components/atoms/ExpansionAtoms/StyledParagraph';\r\nimport InnerWrapper from 'components/atoms/ExpansionAtoms/InnerWrapper';\r\nimport Wrapper from 'components/atoms/ExpansionAtoms/Wrapper';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  getCardData,\r\n  toggleCardDetailsModal,\r\n} from 'ducks/actions/cardDetailsActions';\r\nimport CardTemplate from 'templates/CardTemplate';\r\n\r\nconst StyledGoBack = styled.h3`\r\n  padding: 10px 25px;\r\n  margin: 20px;\r\n  border-radius: 25px;\r\n  color: #6c757d;\r\n  background-color: #ced4da;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 15px 30px;\r\n  }\r\n`;\r\n\r\nconst StyledWrapper = styled(Wrapper)`\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledHeaderByClass = styled(StyledHeader)`\r\n  background-color: ${({ theme, cardClass }) => theme.classColors[cardClass]};\r\n`;\r\n\r\nconst FilteredExpansionByClassPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const data = useSelector((state) => state.fetchExpansionsSet.oneClassCards);\r\n  const isLoading = useSelector((state) => state.fetchExpansionsSet.loading);\r\n  const cardsClass = useSelector((state) => state.fetchExpansionsSet.class);\r\n\r\n  const goBack = () => history.goBack();\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <StyledWrapper>\r\n        <HeroImg />\r\n        <StyledGoBack onClick={goBack}>Zobacz wszystkie karty</StyledGoBack>\r\n        <StyledHeaderByClass cardClass={cardsClass}>\r\n          {cardsClass}\r\n        </StyledHeaderByClass>\r\n        {isLoading ? (\r\n          <img src={loadingIndicator} alt='ładowanie' />\r\n        ) : (\r\n          data.map((item) => (\r\n            <InnerWrapper\r\n              key={item.cardId}\r\n              onClick={() => {\r\n                dispatch(getCardData(item.cardId));\r\n                dispatch(toggleCardDetailsModal());\r\n              }}\r\n            >\r\n              <StyledParagraph>{item.name}</StyledParagraph>\r\n              <StyledParagraph>{item.type}</StyledParagraph>\r\n              <img\r\n                src={`https://art.hearthstonejson.com/v1/render/latest/plPL/256x/${item.cardId}.png`}\r\n                alt='cardImage'\r\n              />\r\n            </InnerWrapper>\r\n          ))\r\n        )}\r\n      </StyledWrapper>\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default FilteredExpansionByClassPage;\r\n","import React, { useEffect } from 'react';\r\nimport HeroImg from 'components/organisms/ExpansionsPage/HeroImg';\r\nimport BasicCards from 'components/organisms/ExpansionsPage/SetsOfCards/BasicCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchExpansionsSet } from 'ducks/actions/fetchExpansionsSet';\r\nimport Filters from 'components/organisms/ExpansionsPage/Filters';\r\nimport CardTemplate from 'templates/CardTemplate';\r\nimport Header from 'components/atoms/Header/Header';\r\n\r\nconst ClassicExpansion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExpansionsSet('Classic', 'classic'));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <CardTemplate>\r\n      <HeroImg />\r\n      <Filters />\r\n      <Header>KLASYCZNE KARTY :</Header>\r\n      <BasicCards />\r\n    </CardTemplate>\r\n  );\r\n};\r\n\r\nexport default ClassicExpansion;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport LandingPage from 'pages/LandingPage';\r\nimport TypesOfCardsPage from 'pages/TypesOfCardsPage';\r\nimport QualityOfCards from 'pages/QualityOfCards';\r\nimport CardBacks from 'pages/CardBacks';\r\nimport HomePage from 'pages/HomePage';\r\nimport Expansions from 'pages/Expansions/BasicExpansion';\r\nimport GoblinsExpansion from 'pages/Expansions/GoblinsExpansion';\r\nimport NaxxramasExpansion from 'pages/Expansions/NaxxramasExpansion';\r\nimport BlackrockMountainExpansion from 'pages/Expansions/BlackrockMountainExpansion';\r\nimport GrandTournamentExpansion from 'pages/Expansions/GrandTournamentExpansion';\r\nimport LeagueOfExplorersExpansion from 'pages/Expansions/LeagueOfExplorersExpansion';\r\nimport OldGodsExpansion from 'pages/Expansions/OldGodsExpansion';\r\nimport KharazanExpansion from 'pages/Expansions/KharazanExpansion';\r\nimport GadzetanExpansion from 'pages/Expansions/GadzetanExpansion';\r\nimport UngoroExpansion from 'pages/Expansions/UngoroExpansion';\r\nimport FrozenThroneExpansion from 'pages/Expansions/FrozenThroneExpansion';\r\nimport FilteredExpansionByClassPage from 'pages/Expansions/FilteredExpansionByClassPage';\r\nimport ClassicExpansion from 'pages/Expansions/ClassicExpansion';\r\n\r\nconst AppRouting = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={LandingPage} />\r\n      <Route exact path='/home' component={HomePage} />\r\n      <Route exact path='/expansions' component={Expansions} />\r\n      <Route\r\n        exact\r\n        path='/expansions/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route exact path='/classic' component={ClassicExpansion} />\r\n      <Route\r\n        exact\r\n        path='/classic/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/goblins_vs_gnomes_expansion'\r\n        component={GoblinsExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/goblins_vs_gnomes_expansion/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route exact path='/naxxramas' component={NaxxramasExpansion} />\r\n      <Route\r\n        exact\r\n        path='/naxxramas/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/blackrock_mountain'\r\n        component={BlackrockMountainExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/blackrock_mountain/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/grand_tournament'\r\n        component={GrandTournamentExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/grand_tournament/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/league_of_explorers'\r\n        component={LeagueOfExplorersExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/league_of_explorers/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route exact path='/old_gods' component={OldGodsExpansion} />\r\n      <Route\r\n        exact\r\n        path='/old_gods/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/one_night_in_kharazan'\r\n        component={KharazanExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/one_night_in_kharazan/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/mean_streets_of_gadzetan'\r\n        component={GadzetanExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/mean_streets_of_gadzetan/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route exact path='/journey_to_ungoro' component={UngoroExpansion} />\r\n      <Route\r\n        exact\r\n        path='/journey_to_ungoro/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/knights_of_the_frozen_throne'\r\n        component={FrozenThroneExpansion}\r\n      />\r\n      <Route\r\n        exact\r\n        path='/knights_of_the_frozen_throne/:slug'\r\n        component={FilteredExpansionByClassPage}\r\n      />\r\n\r\n      <Route exact path='/typesOfCards' component={TypesOfCardsPage} />\r\n      <Route exact path='/qualityOfCards' component={QualityOfCards} />\r\n      <Route exact path='/cardBacks' component={CardBacks} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouting;\r\n","import React from 'react';\r\nimport MainTemplate from 'templates/MainTemplate';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport ScrollToTop from 'components/atoms/ScrollToTop/ScrollToTop';\r\nimport AppRouting from 'routes/AppRouting';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <ScrollToTop />\r\n      <MainTemplate>\r\n        <AppRouting />\r\n      </MainTemplate>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n  isOpen: false,\r\n  isOpenCardSetFilter: false,\r\n  isOpenClassFilter: false,\r\n  isOpenDetailsModal: false,\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_MODAL':\r\n      return {\r\n        ...state,\r\n        isOpen: !state.isOpen,\r\n      };\r\n\r\n    case 'CLOSE_MODAL':\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n      };\r\n\r\n    case 'TOGGLE_FILTER_MODAL':\r\n      return {\r\n        ...state,\r\n        isOpenCardSetFilter: !state.isOpenCardSetFilter,\r\n      };\r\n\r\n    case 'CLOSE_FILTER_MODAL':\r\n      return {\r\n        ...state,\r\n        isOpenCardSetFilter: false,\r\n        isOpenClassFilter: false,\r\n      };\r\n\r\n    case 'TOGGLE_CLASS_MODAL':\r\n      return {\r\n        ...state,\r\n        isOpenClassFilter: !state.isOpenClassFilter,\r\n      };\r\n\r\n    case 'TOGGLE_CARD_DETAILS_MODAL':\r\n      return {\r\n        isOpenDetailsModal: !state.isOpenDetailsModal,\r\n      };\r\n\r\n    case 'CLOSE_CARD_DETAILS_MODAL':\r\n      return {\r\n        isOpenDetailsModal: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import {\r\n  FETCH_ALL_CARDS_REQUEST,\r\n  FETCH_ALL_CARDS_SUCCESS,\r\n  FETCH_ALL_CARDS_FAILURE,\r\n} from 'ducks/constants/FetchConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  AllCardsData: [],\r\n  error: '',\r\n};\r\n\r\nconst fetchAllCardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_CARDS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ALL_CARDS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        AllCardsData: action.payload,\r\n        error: '',\r\n      };\r\n    case FETCH_ALL_CARDS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        AllCardsData: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchAllCardsReducer;\r\n","import {\r\n  FETCH_ONE_CARD_REQUEST,\r\n  FETCH_ONE_CARD_SUCCESS,\r\n  FETCH_ONE_CARD_FAILURE,\r\n} from \"ducks/constants/FetchConstants\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  OneCardData: [],\r\n  error: \"\",\r\n};\r\n\r\nconst fetchOneCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ONE_CARD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_ONE_CARD_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        OneCardData: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_ONE_CARD_FAILURE:\r\n      return {\r\n        loading: false,\r\n        OneCardData: [],\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchOneCardReducer;\r\n","import {\r\n  FETCH_BASIC_SET_FAILURE,\r\n  FETCH_BASIC_SET_SUCCESS,\r\n  FETCH_BASIC_SET_REQUEST,\r\n  FILTER_CARDS_BY_CLASS,\r\n} from 'ducks/constants/FetchConstants';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  basicCardsData: [],\r\n  classicCardsData: [],\r\n  naxxramasCardsData: [],\r\n  goblinsCardsData: [],\r\n  blackrockCardsData: [],\r\n  tournamentCardsData: [],\r\n  explorersCardsData: [],\r\n  oldGodsCardsData: [],\r\n  kharazanCardsData: [],\r\n  gadzetonCardsData: [],\r\n  ungoroCardsData: [],\r\n  frozenThroneCardsData: [],\r\n  oneClassCards: [],\r\n  cardDetails: [],\r\n  class: '',\r\n  cardsLogic: '',\r\n  error: '',\r\n};\r\n\r\nconst fetchExpansionsSet = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BASIC_SET_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case FETCH_BASIC_SET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        [`${action.payload.setOfCards}CardsData`]: action.payload.data,\r\n        cardsLogic: action.payload.setOfCards,\r\n      };\r\n\r\n    case FETCH_BASIC_SET_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        [`${action.payload.setOfCards}CardsData`]: [],\r\n        error: action.payload,\r\n        cardsLogic: '',\r\n      };\r\n\r\n    case FILTER_CARDS_BY_CLASS:\r\n      return {\r\n        ...state,\r\n        class: action.payload.className,\r\n        oneClassCards: state[`${state.cardsLogic}CardsData`].filter(\r\n          (item) => item.playerClass === action.payload.className\r\n        ),\r\n      };\r\n\r\n    case 'GET_CARD_DATA':\r\n      return {\r\n        ...state,\r\n        cardDetails: state[`${state.cardsLogic}CardsData`].filter(\r\n          (item) => item.cardId === action.payload.id\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchExpansionsSet;\r\n","const initialState = {\r\n  loading: true,\r\n  AllCardBacksData: [],\r\n  backDetails: [],\r\n  error: '',\r\n};\r\n\r\nconst fetchCardBacksReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_CARD_BACKS_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'FETCH_CARD_BACKS_SUCCESS':\r\n      return {\r\n        loading: false,\r\n        AllCardBacksData: action.payload.data,\r\n        error: '',\r\n      };\r\n    case 'FETCH_CARD_BACKS_FAILURE':\r\n      return {\r\n        loading: false,\r\n        AllCardsData: [],\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'GET_BACK_CARD_DATA':\r\n      return {\r\n        ...state,\r\n        backDetails: state.AllCardBacksData.filter(\r\n          (item) => item.cardBackId === action.payload.id\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetchCardBacksReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport modalReducer from \"./modalReducer\";\r\nimport fetchAllCardsReducer from \"./fetchAllCardsReducer\";\r\nimport fetchOneCardReducer from \"./fetchOneCardReducer\";\r\nimport fetchExpansionsSet from \"./fetchExpansionsSet\";\r\nimport fetchCardBacksReducer from \"./fetchCardBacksReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  modalReducer,\r\n  fetchAllCardsReducer,\r\n  fetchOneCardReducer,\r\n  fetchExpansionsSet,\r\n  fetchCardBacksReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"ducks/reducers/\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"ducks/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}